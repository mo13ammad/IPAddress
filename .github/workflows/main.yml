# Workflow Name
name: Sync External Repositories

# Triggers: When should this workflow run?
on:
  # Allows manual execution from the GitHub Actions tab
  workflow_dispatch:

  # Scheduled run: Every 30 minutes
  schedule:
    - cron: '*/30 * * * *'

jobs:
  sync:
    # Use the latest version of Ubuntu for this job
    runs-on: ubuntu-latest

    # Grant write permissions to the GITHUB_TOKEN for this job
    permissions:
      contents: write

    # Job steps
    steps:
      # Step 1: Checkout your repository's code
      - name: Checkout local repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Sync Country IP Blocks
      - name: Sync from herrbischoff/country-ip-blocks
        run: |
          echo "Cloning source repository for country IPs..."
          git clone --depth 1 https://github.com/herrbischoff/country-ip-blocks.git temp_source_repo

          echo "Syncing country IPs to custom directory names..."
          mkdir -p ipv4-countries
          mkdir -p ipv6-countries

          rsync -av --delete temp_source_repo/ipv4/ ipv4-countries/
          rsync -av --delete temp_source_repo/ipv6/ ipv6-countries/

          echo "Cleaning up temporary directory..."
          rm -rf temp_source_repo

      # Step 3: Sync Steam Game Server IPs
      - name: Sync Steam Game Servers
        run: |
          # Install jq, a command-line JSON processor
          sudo apt-get update && sudo apt-get install -y jq

          echo "Syncing Steam game server IPs..."
          mkdir -p game-servers/steam

          # Map of AppIDs to Game Names. You can add more games here.
          declare -A GAME_MAP
          GAME_MAP=(
            ["730"]="Counter-Strike 2"
            ["570"]="Dota 2"
            ["440"]="Team Fortress 2"
          )

          for APP_ID in "${!GAME_MAP[@]}"; do
            GAME_NAME="${GAME_MAP[$APP_ID]}"
            # Create a safe filename by replacing spaces with underscores
            FILENAME=$(echo "$GAME_NAME" | tr ' ' '_')
            
            echo "Processing: $GAME_NAME (App ID: $APP_ID)"
            
            API_URL="https://api.steampowered.com/ISteamApps/GetSDRConfig/v1?appid=${APP_ID}"
            curl -s "$API_URL" | jq -r '.pops[].relays[]? | .ipv4, .ipv6 | select(. != null)' > "game-servers/steam/${FILENAME}.cidr"

            # Check if the file was created and is not empty
            if [ -s "game-servers/steam/${FILENAME}.cidr" ]; then
              echo "Successfully fetched IPs for $GAME_NAME."
            else
              echo "Warning: No IPs found for $GAME_NAME (App ID: ${APP_ID}). It might not have public server IPs."
              # Remove the empty file to keep the repo clean
              rm -f "game-servers/steam/${FILENAME}.cidr"
            fi
          done

          echo "Finished syncing Steam game servers."

      # Step 4: Commit and push changes if any exist
      - name: Commit and push changes
        run: |
          # Configure Git for committing with your details
          git config --global user.name "mo13ammad"
          git config --global user.email "mo13ammad@users.noreply.github.com"

          # Stage all changes, including new and modified files
          git add .

          # Check if there are any staged changes to be committed
          if ! git diff --staged --quiet; then
            echo "Changes detected. Committing and pushing..."
            
            # Create a commit message with the date and time in Tehran time
            COMMIT_DATE=$(TZ="Asia/Tehran" date +'%Y-%m-%d %H:%M:%S')
            git commit -m "Auto-sync: Data updated on $COMMIT_DATE (Tehran Time)"
            
            # Push the changes to your repository
            git push
          else
            echo "No changes to commit. Working tree is clean."
          fi
